'use client';

import { useSession } from '../context/SessionContext';
import { useRouter } from 'next/navigation';

export default function SchedulePage() {
  const { sessionData } = useSession();
  const router = useRouter();

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —É—á–µ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
  const calculatePeriod = (startYear: string, semester: string) => {
    if (!startYear || !semester) return { startDate: '', endDate: '' };
    
    const year = parseInt(startYear);
    const sem = parseInt(semester);
    
    if (sem % 2 === 1) {
      // –ù–µ—á–µ—Ç–Ω—ã–π —Å–µ–º–µ—Å—Ç—Ä (–æ—Å–µ–Ω–Ω–∏–π) - —Å–µ–Ω—Ç—è–±—Ä—å-—è–Ω–≤–∞—Ä—å
      const courseYear = Math.ceil(sem / 2); // 1,3,5,7 —Å–µ–º–µ—Å—Ç—Ä—ã -> 1,2,3,4 –∫—É—Ä—Å—ã
      const academicYear = year + courseYear - 1;
      return {
        startDate: `${academicYear}-09-01`,
        endDate: `${academicYear + 1}-01-31`
      };
    } else {
      // –ß–µ—Ç–Ω—ã–π —Å–µ–º–µ—Å—Ç—Ä (–≤–µ—Å–µ–Ω–Ω–∏–π) - —Ñ–µ–≤—Ä–∞–ª—å-–∏—é–Ω—å
      const courseYear = sem / 2; // 2,4,6,8 —Å–µ–º–µ—Å—Ç—Ä—ã -> 1,2,3,4 –∫—É—Ä—Å—ã
      const academicYear = year + courseYear - 1;
      return {
        startDate: `${academicYear + 1}-02-01`,
        endDate: `${academicYear + 1}-06-30`
      };
    }
  };

  // –í—ã—á–∏—Å–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–µ—Å—Å–∏–∏
  const { startDate, endDate } = calculatePeriod(sessionData.startYear, sessionData.semester);

  return (
    <main className="p-5 bg-yellow-50 min-h-[80vh] rounded-xl shadow-md mt-3">
      <div className="max-w-6xl mx-auto">
        {/* –ö—Ä–∞—Å–∏–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
        <div className="bg-yellow-50 rounded-lg shadow-md p-8 mb-6">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="border-b border-gray-200 pb-6 mb-6">
            <div className="flex justify-between items-start">
              <div>
                <h1 className="text-3xl font-bold text-gray-800 mb-2">
                  üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
                </h1>
                <p className="text-lg text-gray-600">{sessionData.faculty}</p>
                <p className="text-lg text-gray-600">{sessionData.plan}</p>
                <p className="text-lg text-gray-600">{sessionData.subPlan}</p>
              </div>
              <button 
                onClick={() => router.push('/loads')} 
                className="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors cursor-pointer flex items-center"
              >
                ‚Üê –ù–∞–∑–∞–¥
              </button>
            </div>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –¥–≤—É—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="space-y-4">
              
              <div className="space-y-3">
                
                <div className="flex items-center">
                  <span className="text-sm font-medium text-gray-500 w-32">–ü—Ä–µ–¥–º–µ—Ç:</span>
                  <span className="text-gray-800 font-medium">{sessionData.subject}</span>
                </div>
                
                <div className="flex items-center">
                  <span className="text-sm font-medium text-gray-500 w-32">–ì–æ–¥ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è:</span>
                  <span className="text-gray-800">{sessionData.startYear}</span>
                </div>
                
                <div className="flex items-center">
                  <span className="text-sm font-medium text-gray-500 w-32">–£—á–µ–±–Ω—ã–π –≥–æ–¥:</span>
                  <span className="text-gray-800">
                    {startDate && startDate.split('-')[0] 
                      ? `${startDate.split('-')[0]}-${parseInt(startDate.split('-')[0]) + 1}`
                      : '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'
                    }
                  </span>
                </div>
                
                <div className="flex items-center">
                  <span className="text-sm font-medium text-gray-500 w-32">–ü–µ—Ä–∏–æ–¥:</span>
                  <span className="text-gray-800">
                    {startDate && endDate 
                      ? `${startDate} ‚Äî ${endDate}`
                      : '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'
                    }
                  </span>
                </div>
                
                <div className="flex items-center">
                  <span className="text-sm font-medium text-gray-500 w-32">–°–µ–º–µ—Å—Ç—Ä:</span>
                  <span className="text-gray-800">{sessionData.semester}</span>
                </div>

              </div>
            </div>

            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ù–∞–≥—Ä—É–∑–∫–∞ */}
            <div className="space-y-4">

              
              <div className="space-y-3">
                {parseInt(sessionData.lectures) > 0 && (
                  <div className="p-3 bg-gray-50 rounded-lg border border-gray-200">
                    <div className="flex items-center justify-between mb-2">
                      <div className="flex items-center">
                        <span className="text-gray-600 mr-2">üìö</span>
                        <span className="text-sm font-medium text-gray-700">–õ–µ–∫—Ü–∏–∏:</span>
                      </div>
                      <div className="flex items-center gap-3">
                        <span className="text-lg font-bold text-gray-700">{sessionData.lectures} —á (–ø–ª–∞–Ω)</span>
                        <button 
                          onClick={() => router.push('/series')}
                          className="px-3 py-1 bg-gray-200 text-gray-700 text-xs rounded hover:bg-gray-300 transition-colors cursor-pointer border border-gray-300"
                        >
                          –°–æ–∑–¥–∞—Ç—å —Å–µ—Ä–∏—é –∑–∞–Ω—è—Ç–∏–π
                        </button>
                      </div>
                    </div>
                    <div className="text-xs text-gray-500 ml-6">
                      –í —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏: 0 –∑–∞–Ω—è—Ç–∏–π (0 —á) ‚Ä¢ –ê—É–¥–∏—Ç–æ—Ä–∏–∏: –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã ‚Ä¢ –ì—Ä—É–ø–ø—ã: –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã
                    </div>
                  </div>
                )}
                
                {parseInt(sessionData.seminars) > 0 && (
                  <div className="p-3 bg-gray-50 rounded-lg border border-gray-200">
                    <div className="flex items-center justify-between mb-2">
                      <div className="flex items-center">
                        <span className="text-gray-600 mr-2">üí¨</span>
                        <span className="text-sm font-medium text-gray-700">–°–µ–º–∏–Ω–∞—Ä—ã:</span>
                      </div>
                      <div className="flex items-center gap-3">
                        <span className="text-lg font-bold text-gray-700">{sessionData.seminars} —á (–ø–ª–∞–Ω)</span>
                        <button 
                          onClick={() => router.push('/series')}
                          className="px-3 py-1 bg-gray-200 text-gray-700 text-xs rounded hover:bg-gray-300 transition-colors cursor-pointer border border-gray-300"
                        >
                          –°–æ–∑–¥–∞—Ç—å —Å–µ—Ä–∏—é –∑–∞–Ω—è—Ç–∏–π
                        </button>
                      </div>
                    </div>
                    <div className="text-xs text-gray-500 ml-6">
                      –í —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏: 0 –∑–∞–Ω—è—Ç–∏–π (0 —á) ‚Ä¢ –ê—É–¥–∏—Ç–æ—Ä–∏–∏: –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã ‚Ä¢ –ì—Ä—É–ø–ø—ã: –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã
                    </div>
                  </div>
                )}
                
                {parseInt(sessionData.labs) > 0 && (
                  <div className="p-3 bg-gray-50 rounded-lg border border-gray-200">
                    <div className="flex items-center justify-between mb-2">
                      <div className="flex items-center">
                        <span className="text-gray-600 mr-2">üî¨</span>
                        <span className="text-sm font-medium text-gray-700">–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ:</span>
                      </div>
                      <div className="flex items-center gap-3">
                        <span className="text-lg font-bold text-gray-700">{sessionData.labs} —á (–ø–ª–∞–Ω)</span>
                        <button 
                          onClick={() => router.push('/series')}
                          className="px-3 py-1 bg-gray-200 text-gray-700 text-xs rounded hover:bg-gray-300 transition-colors cursor-pointer border border-gray-300"
                        >
                          –°–æ–∑–¥–∞—Ç—å —Å–µ—Ä–∏—é –∑–∞–Ω—è—Ç–∏–π
                        </button>
                      </div>
                    </div>
                    <div className="text-xs text-gray-500 ml-6">
                      –í —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏: 0 –∑–∞–Ω—è—Ç–∏–π (0 —á) ‚Ä¢ –ê—É–¥–∏—Ç–æ—Ä–∏–∏: –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã ‚Ä¢ –ì—Ä—É–ø–ø—ã: –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã
                    </div>
                  </div>
                )}
                
                {parseInt(sessionData.practice) > 0 && (
                  <div className="p-3 bg-gray-50 rounded-lg border border-gray-200">
                    <div className="flex items-center justify-between mb-2">
                      <div className="flex items-center">
                        <span className="text-gray-600 mr-2">‚ö°</span>
                        <span className="text-sm font-medium text-gray-700">–ü—Ä–∞–∫—Ç–∏–∫–∞:</span>
                      </div>
                      <div className="flex items-center gap-3">
                        <span className="text-lg font-bold text-gray-700">{sessionData.practice} —á (–ø–ª–∞–Ω)</span>
                        <button 
                          onClick={() => router.push('/series')}
                          className="px-3 py-1 bg-gray-200 text-gray-700 text-xs rounded hover:bg-gray-300 transition-colors cursor-pointer border border-gray-300"
                        >
                          –°–æ–∑–¥–∞—Ç—å —Å–µ—Ä–∏—é –∑–∞–Ω—è—Ç–∏–π
                        </button>
                      </div>
                    </div>
                    <div className="text-xs text-gray-500 ml-6">
                      –í —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏: 0 –∑–∞–Ω—è—Ç–∏–π (0 —á) ‚Ä¢ –ê—É–¥–∏—Ç–æ—Ä–∏–∏: –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã ‚Ä¢ –ì—Ä—É–ø–ø—ã: –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (ID) */}
          <div className="mt-8 border-t border-gray-200 pt-6">
            <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 text-sm">
              <div className="flex items-center">
                <span className="font-medium text-gray-500 w-24">ID —Ñ–∞–∫-—Ç–∞:</span>
                <span className="text-gray-700 font-mono">{sessionData.facultyId}</span>
              </div>
              <div className="flex items-center">
                <span className="font-medium text-gray-500 w-24">ID –ø–ª–∞–Ω–∞:</span>
                <span className="text-gray-700 font-mono">{sessionData.planId}</span>
              </div>
              <div className="flex items-center">
                <span className="font-medium text-gray-500 w-24">ID –ø–æ–¥–ø–ª–∞–Ω–∞:</span>
                <span className="text-gray-700 font-mono">{sessionData.subPlanId}</span>
              </div>
              <div className="flex items-center">
                <span className="font-medium text-gray-500 w-24">ID –ø—Ä–µ–¥–º–µ—Ç–∞:</span>
                <span className="text-gray-700 font-mono">{sessionData.subjectId}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  );
}
